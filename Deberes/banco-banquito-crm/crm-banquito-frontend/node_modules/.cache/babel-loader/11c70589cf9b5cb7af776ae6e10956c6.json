{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/esteban/Documents/ESPE/Octavo Semestre/Arquitectura de Software/crm-banquito-frontend-project/crm-banquito-frontend-git/crm-banquito-frontend/src/Campaign/CampaignTable.js\";\nimport React from \"react\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { orderBy } from 'lodash';\nimport * as Constants from '../constants';\nimport EditCampaignModal from \"./EditCampaignModal\";\nimport CustomAlert from '../CustomComponents/CustomAlert';\nimport DeleteDialog from '../CustomComponents/DeleteDialog';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser, faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport AsignClientsModal from \"./AsignClientsModal\";\n\nclass CampaignTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.editRecord = (record, index) => {\n      this.setState({\n        campaign: record,\n        modalShow: true\n      });\n      this.setState({\n        variant: \"success\",\n        alertTitle: \"Actualización exitosa!\",\n        alertBody: \"La campaña se ha actualizado exitosamente!\"\n      });\n    };\n\n    this.deleteRecord = (record, index) => {\n      console.log(\"Delete record\", index, record);\n      this.setState({\n        campaign: record,\n        showDelete: true,\n        deleteTitle: \"Elminicaión de una Campaña\",\n        deleteBody: \"¿Está seguro que desea eliminar la campaña '\" + record.name + \"'?\"\n      });\n    };\n\n    this.asignClients = (record, index) => {\n      console.log(record);\n      this.getClients();\n      this.setState({\n        asignModalShow: true,\n        campaignId: record.id\n      });\n      fetch(Constants.CONTACTABILITY_URL, {\n        method: \"GET\"\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        let filteredData = data.filter(element => element.idCampaign == record.id);\n        console.log(filteredData);\n        filteredData.forEach(element => {\n          this.deleteRow(element.idClient);\n        });\n      });\n    };\n\n    this.getClients = () => {\n      fetch(Constants.CLIENTS_URL).then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          clients: data\n        });\n      });\n    };\n\n    this.deleteRow = clientId => {\n      let r = this.state.clients;\n      let index = r.findIndex(element => element.id == clientId);\n      console.log(r.splice(index, 1));\n      this.setState({\n        clients: r\n      });\n    };\n\n    this.deleteRegistry = r => {\n      fetch(Constants.CAMPAIGN_URL + r.id, {\n        method: 'DELETE'\n      }).then(result => {\n        result.text();\n      }).then(response => {\n        console.log('registry ' + r.id + ' deleted');\n        this.props.getCampaigns();\n      });\n    };\n\n    this.handleInputChange = e => {\n      console.log(e);\n      let change = {};\n      change = this.state.campaign;\n      change[e.target.name] = e.target.value;\n      this.setState({\n        campaign: change\n      });\n    };\n\n    this.onSort = (column, records, sortOrder) => {\n      return orderBy(records, [column], [sortOrder]);\n    };\n\n    this.columns = [{\n      key: \"id\",\n      text: \"Nro\",\n      className: \"id\",\n      sortable: true\n    }, {\n      key: \"name\",\n      text: \"Nombre\",\n      sortable: true\n    }, {\n      key: \"description\",\n      text: \"Descripcion\",\n      className: \"description\",\n      sortable: true\n    }, {\n      key: \"action\",\n      text: \"Action\",\n      cell: (record, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-sm\",\n            onClick: this.editRecord.bind(this, record, index),\n            style: {\n              marginRight: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this), \" Editar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm\",\n            onClick: this.deleteRecord.bind(this, record, index),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this), \" Eliminar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success btn-sm\",\n            onClick: this.asignClients.bind(this, record, index),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), \" Asignar Clientes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      }\n    }];\n    this.config = {\n      page_size: 10,\n      length_menu: [10, 20, 50],\n      show_filter: true,\n      show_pagination: true,\n      filename: \"campaigns\",\n      button: {\n        excel: true,\n        print: true,\n        csv: true\n      },\n      language: {\n        length_menu: \"Mostrar _MENU_ registros por página\",\n        filter: \"Buscar en registros ...\",\n        info: \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\n        pagination: {\n          first: \"Primero\",\n          previous: \"Previa\",\n          next: \"próximo\",\n          last: \"Última\"\n        }\n      }\n    };\n    this.state = {\n      modalShow: false,\n      asignModalShow: false,\n      campaign: {},\n      variant: \"\",\n      alertBody: \"\",\n      alertTitle: \"\",\n      deleteBody: \"\",\n      deleteTitle: \"\",\n      showAlert: false,\n      showDelete: false,\n      clients: [],\n      id: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomAlert, {\n        show: this.state.showAlert,\n        onClose: () => {\n          this.setState({\n            showAlert: false\n          });\n        },\n        variant: this.state.variant,\n        messageTitle: this.state.alertTitle,\n        messageBody: this.state.alertBody,\n        dismissible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(DeleteDialog, {\n          showDelete: this.state.showDelete,\n          hideDelete: () => {\n            this.setState({\n              showDelete: false\n            });\n          },\n          deleteTitle: this.state.deleteTitle,\n          deleteBody: this.state.deleteBody,\n          deleteRegistry: this.deleteRegistry,\n          record: this.state.campaign\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactDatatable, {\n        config: this.config,\n        records: this.props.records,\n        columns: this.columns,\n        onSort: this.onSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AsignClientsModal, {\n        show: this.state.asignModalShow,\n        records: this.state.clients,\n        onHide: () => this.setState({\n          asignModalShow: false\n        }),\n        campaignId: this.state.campaignId,\n        deleteRow: this.deleteRow.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditCampaignModal, {\n        handleInputChange: this.handleInputChange.bind(this),\n        show: this.state.modalShow,\n        campaign: this.state.campaign,\n        onHide: () => {\n          this.setState({\n            modalShow: false\n          });\n          this.props.getCampaigns();\n        },\n        getCampaigns: this.props.getCampaigns,\n        onShow: () => {\n          this.setState({\n            showAlert: true\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    this.getClients();\n  }\n\n}\n\nexport default CampaignTable;","map":{"version":3,"sources":["/home/esteban/Documents/ESPE/Octavo Semestre/Arquitectura de Software/crm-banquito-frontend-project/crm-banquito-frontend-git/crm-banquito-frontend/src/Campaign/CampaignTable.js"],"names":["React","ReactDatatable","orderBy","Constants","EditCampaignModal","CustomAlert","DeleteDialog","FontAwesomeIcon","faUser","faTrash","faEdit","AsignClientsModal","CampaignTable","Component","constructor","props","editRecord","record","index","setState","campaign","modalShow","variant","alertTitle","alertBody","deleteRecord","console","log","showDelete","deleteTitle","deleteBody","name","asignClients","getClients","asignModalShow","campaignId","id","fetch","CONTACTABILITY_URL","method","then","response","json","data","filteredData","filter","element","idCampaign","forEach","deleteRow","idClient","CLIENTS_URL","clients","clientId","r","state","findIndex","splice","deleteRegistry","CAMPAIGN_URL","result","text","getCampaigns","handleInputChange","e","change","target","value","onSort","column","records","sortOrder","columns","key","className","sortable","cell","bind","marginRight","config","page_size","length_menu","show_filter","show_pagination","filename","button","excel","print","csv","language","info","pagination","first","previous","next","last","showAlert","render","componentDidMount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { orderBy } from 'lodash';\nimport * as Constants from '../constants';\nimport EditCampaignModal from \"./EditCampaignModal\";\nimport CustomAlert from '../CustomComponents/CustomAlert';\nimport DeleteDialog from '../CustomComponents/DeleteDialog';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser, faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport AsignClientsModal from \"./AsignClientsModal\";\n\nclass CampaignTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.columns = [\n            {\n                key: \"id\",\n                text: \"Nro\",\n                className: \"id\",\n                sortable: true\n            },\n            {\n                key: \"name\",\n                text: \"Nombre\",\n                sortable: true\n            },\n            {\n                key: \"description\",\n                text: \"Descripcion\",\n                className: \"description\",\n                sortable: true\n            },\n            {\n                key: \"action\",\n                text: \"Action\",\n                cell: (record, index) => {\n                    return (\n                        <div>\n                            <button\n                                className=\"btn btn-primary btn-sm\"\n                                onClick={this.editRecord.bind(this, record, index)}\n                                style={{marginRight: '5px'}}>\n                                    <FontAwesomeIcon icon={faEdit}/> Editar\n                            </button>\n                            <button \n                                className=\"btn btn-danger btn-sm\" \n                                onClick={this.deleteRecord.bind(this, record, index)}>\n                                    <FontAwesomeIcon icon={faTrash}/> Eliminar\n                            </button>\n                            <span>&nbsp;&nbsp;</span>\n                            <button \n                                className=\"btn btn-success btn-sm\" \n                                onClick={this.asignClients.bind(this, record, index)}>\n                                    <FontAwesomeIcon icon={faUser}/> Asignar Clientes\n                            </button>\n                        </div>\n                    );\n                }\n            }\n        ];\n        this.config = {\n            page_size: 10,\n            length_menu: [10, 20, 50],\n            show_filter: true,\n            show_pagination: true,\n            filename: \"campaigns\",\n            button: {\n                excel: true,\n                print: true,\n                csv: true\n            },\n            language: {\n                length_menu: \"Mostrar _MENU_ registros por página\",\n                filter: \"Buscar en registros ...\",\n                info: \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\n                pagination: {\n                    first: \"Primero\",\n                    previous: \"Previa\",\n                    next: \"próximo\",\n                    last: \"Última\"\n                }\n            }\n        }\n        this.state = {\n            modalShow: false,\n            asignModalShow: false,\n            campaign: {},\n            variant: \"\",\n            alertBody: \"\",\n            alertTitle: \"\",\n            deleteBody: \"\",\n            deleteTitle: \"\",\n            showAlert: false,\n            showDelete: false,\n            clients: [],\n            id: 0\n        }\n    }\n    \n    editRecord = (record, index) => {\n        this.setState({campaign: record, modalShow: true});\n        this.setState({\n            variant: \"success\",\n            alertTitle: \"Actualización exitosa!\",\n            alertBody: \"La campaña se ha actualizado exitosamente!\"\n        });\n    }\n    \n    deleteRecord = (record, index) => {\n        console.log(\"Delete record\", index, record);\n        this.setState({\n            campaign: record,\n            showDelete: true,\n            deleteTitle: \"Elminicaión de una Campaña\",\n            deleteBody: \"¿Está seguro que desea eliminar la campaña '\"+record.name+\"'?\"\n        })\n    }\n\n    asignClients = (record, index) => {\n        console.log(record)\n        this.getClients()\n        this.setState({\n            asignModalShow: true,\n            campaignId: record.id\n        })\n        fetch(Constants.CONTACTABILITY_URL, {\n            method: \"GET\",\n        }).then(response => {\n            return response.json()\n        }).then(data => {\n            let filteredData = data.filter(element => element.idCampaign == record.id)\n            console.log(filteredData)\n            filteredData.forEach(element => {\n                this.deleteRow(element.idClient)\n            });\n        })\n    }\n\n    getClients = () => {\n        fetch(Constants.CLIENTS_URL).then((response) => {\n            return response.json();\n        }).then(data => {\n            this.setState({clients: data});\n        })\n    }\n\n    deleteRow = (clientId) => {\n        let r = this.state.clients\n        let index = r.findIndex(element => element.id == clientId)\n        console.log(r.splice(index, 1))\n        this.setState({\n            clients: r\n        })\n    }\n\n    deleteRegistry = r => {\n        fetch(Constants.CAMPAIGN_URL+r.id, {\n            method: 'DELETE'\n        }).then(result => {\n            result.text();\n        }).then(response => {\n            console.log('registry '+ r.id +' deleted')\n            this.props.getCampaigns();\n        })\n    }\n\n    handleInputChange = e => {\n        console.log(e)\n        let change = {}\n        change = this.state.campaign\n        change[e.target.name] = e.target.value\n        this.setState({\n            campaign: change\n        })\n    }\n    \n    onSort = (column, records, sortOrder) => {\n        return orderBy(records, [column], [sortOrder]);\n    }\n    \n    render() {\n        \n        return (\n            <div>\n                <CustomAlert \n                    show={this.state.showAlert}\n                    onClose={() => {this.setState({showAlert: false})}}\n                    variant={this.state.variant}\n                    messageTitle={this.state.alertTitle}\n                    messageBody={this.state.alertBody} \n                    dismissible\n                />\n                <div className=\"container\">\n                    <DeleteDialog \n                        showDelete={this.state.showDelete}\n                        hideDelete={() => {this.setState({showDelete: false})}}\n                        deleteTitle={this.state.deleteTitle}\n                        deleteBody={this.state.deleteBody}\n                        deleteRegistry={this.deleteRegistry}\n                        record={this.state.campaign}\n                    />\n                </div>\n                <ReactDatatable\n                    config={this.config}\n                    records={this.props.records}\n                    columns={this.columns}\n                    onSort={this.onSort}\n                />\n                <AsignClientsModal \n                    show={this.state.asignModalShow}\n                    records={this.state.clients}\n                    onHide={() => this.setState({asignModalShow: false})} \n                    campaignId={this.state.campaignId}\n                    deleteRow={this.deleteRow.bind(this)}\n                />\n                <EditCampaignModal \n                    handleInputChange={this.handleInputChange.bind(this)} \n                    show={this.state.modalShow} \n                    campaign={this.state.campaign} \n                    onHide={() => {this.setState({modalShow: false}); this.props.getCampaigns()}} \n                    getCampaigns={this.props.getCampaigns}\n                    onShow={() => {this.setState({showAlert: true})}}\n                />\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.getClients()\n    }\n}\n\nexport default CampaignTable;"]},"metadata":{},"sourceType":"module"}