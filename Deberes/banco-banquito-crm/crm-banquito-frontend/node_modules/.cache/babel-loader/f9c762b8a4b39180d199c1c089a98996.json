{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/esteban/Documents/ESPE/Octavo Semestre/Arquitectura de Software/crm-banquito-frontend-project/crm-banquito-frontend-git/crm-banquito-frontend/src/Client/AsignClientsTable.js\";\nimport React from \"react\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { orderBy } from 'lodash';\nimport * as Constants from '../constants';\nimport CustomAlert from '../CustomComponents/CustomAlert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nclass AsignClientsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.asignClient = (record, index) => {\n      this.setState({\n        client: record\n      });\n      let contactability = {};\n      contactability[\"idClient\"] = record.id;\n      contactability[\"idCampaign\"] = this.props.campaignId;\n      contactability[\"answer\"] = false;\n      fetch(Constants.CONTACTABILITY_URL, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(contactability)\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        this.props.deleteRow(index);\n        this.props.showAlert();\n        this.showSaveAlert();\n      });\n    };\n\n    this.handleInputChange = e => {\n      console.log(e);\n      let change = {};\n      change = this.state.client;\n      change[e.target.name] = e.target.value;\n      this.setState({\n        client: change\n      });\n    };\n\n    this.handleDateChange = e => {\n      console.log(e);\n      console.log(this.state.client);\n      let change = {};\n      change = this.state.client;\n      change[\"birthdate\"] = e.toISOString();\n      console.log(change);\n      this.setState({\n        client: change\n      });\n    };\n\n    this.onSort = (column, records, sortOrder) => {\n      return orderBy(records, [column], [sortOrder]);\n    };\n\n    this.columns = [{\n      key: \"id\",\n      text: \"ID\",\n      className: \"id\",\n      sortable: true\n    }, {\n      key: \"identification\",\n      text: \"Cedula\",\n      sortable: true\n    }, {\n      key: \"name\",\n      text: \"Nombre\",\n      className: \"name\",\n      sortable: true\n    }, {\n      key: \"surname\",\n      text: \"Apellido\",\n      className: \"surname\",\n      sortable: true\n    }, {\n      key: \"genre\",\n      text: \"Genero\",\n      className: \"genre\",\n      sortable: true\n    }, {\n      key: \"birthProvince\",\n      text: \"Provincia\",\n      className: \"bithProvince\",\n      sortable: true\n    }, {\n      key: \"birthCanton\",\n      text: \"Canton\",\n      className: \"bithCanton\",\n      sortable: true\n    }, {\n      key: \"balanceAccount\",\n      text: \"Balance\",\n      className: \"balanceAccount\",\n      sortable: true\n    }, {\n      key: \"balanceLoan\",\n      text: \"Deuda\",\n      className: \"balanceLoan\",\n      sortable: true\n    }, {\n      key: \"action\",\n      text: \"Action\",\n      cell: (record, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-sm\",\n            onClick: this.asignClient.bind(this, record, index),\n            style: {\n              marginRight: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), \" Agregar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this);\n      }\n    }];\n    this.config = {\n      page_size: 10,\n      length_menu: [10, 20, 50],\n      show_filter: true,\n      show_pagination: true,\n      filename: \"clients\",\n      language: {\n        length_menu: \"Mostrar _MENU_ registros por página\",\n        filter: \"Buscar en registros ...\",\n        info: \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\n        pagination: {\n          first: \"Primero\",\n          previous: \"Previa\",\n          next: \"próximo\",\n          last: \"Última\"\n        }\n      }\n    };\n    this.state = {\n      modalShow: false,\n      client: {},\n      variant: \"\",\n      alertBody: \"\",\n      alertTitle: \"\",\n      deleteBody: \"\",\n      deleteTitle: \"\",\n      showAlert: false,\n      showDelete: false\n    };\n  }\n\n  // getClients() {\n  //     fetch(Constants.GET_CLIENTS).then((response) => {\n  //         return response.json();\n  //     }).then(data => {\n  //         this.setState({records: data});\n  //     })\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomAlert, {\n        show: this.state.showAlert,\n        onClose: () => {\n          this.setState({\n            showAlert: false\n          });\n        },\n        variant: this.state.variant,\n        messageTitle: this.state.alertTitle,\n        messageBody: this.state.alertBody,\n        dismissible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactDatatable, {\n        config: this.config,\n        records: this.props.records,\n        columns: this.columns,\n        onSort: this.onSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this);\n  } // componentDidMount() {\n  //     this.getClients()\n  // }\n\n\n}\n\nexport default AsignClientsTable;","map":{"version":3,"sources":["/home/esteban/Documents/ESPE/Octavo Semestre/Arquitectura de Software/crm-banquito-frontend-project/crm-banquito-frontend-git/crm-banquito-frontend/src/Client/AsignClientsTable.js"],"names":["React","ReactDatatable","orderBy","Constants","CustomAlert","FontAwesomeIcon","faPlus","AsignClientsTable","Component","constructor","props","asignClient","record","index","setState","client","contactability","id","campaignId","fetch","CONTACTABILITY_URL","method","headers","body","JSON","stringify","then","response","json","data","deleteRow","showAlert","showSaveAlert","handleInputChange","e","console","log","change","state","target","name","value","handleDateChange","toISOString","onSort","column","records","sortOrder","columns","key","text","className","sortable","cell","bind","marginRight","config","page_size","length_menu","show_filter","show_pagination","filename","language","filter","info","pagination","first","previous","next","last","modalShow","variant","alertBody","alertTitle","deleteBody","deleteTitle","showDelete","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { orderBy } from 'lodash';\nimport * as Constants from '../constants';\nimport CustomAlert from '../CustomComponents/CustomAlert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nclass AsignClientsTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.columns = [\n            {\n                key: \"id\",\n                text: \"ID\",\n                className: \"id\",\n                sortable: true\n            },\n            {\n                key: \"identification\",\n                text: \"Cedula\",\n                sortable: true\n            },\n            {\n                key: \"name\",\n                text: \"Nombre\",\n                className: \"name\",\n                sortable: true\n            },\n            {\n                key: \"surname\",\n                text: \"Apellido\",\n                className: \"surname\",\n                sortable: true\n            },\n            {\n                key: \"genre\",\n                text: \"Genero\",\n                className: \"genre\",\n                sortable: true\n            },\n            {\n                key: \"birthProvince\",\n                text: \"Provincia\",\n                className: \"bithProvince\",\n                sortable: true\n            },\n            {\n                key: \"birthCanton\",\n                text: \"Canton\",\n                className: \"bithCanton\",\n                sortable: true\n            },\n            {\n                key: \"balanceAccount\",\n                text: \"Balance\",\n                className: \"balanceAccount\",\n                sortable: true\n            },\n            {\n                key: \"balanceLoan\",\n                text: \"Deuda\",\n                className: \"balanceLoan\",\n                sortable: true\n            },\n            {\n                key: \"action\",\n                text: \"Action\",\n                cell: (record, index) => {\n                    return (\n                        <div>\n                            <button\n                                className=\"btn btn-primary btn-sm\"\n                                onClick={this.asignClient.bind(this, record, index)}\n                                style={{marginRight: '5px'}}>\n                                    <FontAwesomeIcon icon={faPlus}/> Agregar\n                            </button>\n                        </div>\n                    );\n                }\n            }\n        ];\n        this.config = {\n            page_size: 10,\n            length_menu: [10, 20, 50],\n            show_filter: true,\n            show_pagination: true,\n            filename: \"clients\",\n            language: {\n                length_menu: \"Mostrar _MENU_ registros por página\",\n                filter: \"Buscar en registros ...\",\n                info: \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\n                pagination: {\n                    first: \"Primero\",\n                    previous: \"Previa\",\n                    next: \"próximo\",\n                    last: \"Última\"\n                }\n            }\n        }\n        this.state = {\n            modalShow: false,\n            client: {},\n            variant: \"\",\n            alertBody: \"\",\n            alertTitle: \"\",\n            deleteBody: \"\",\n            deleteTitle: \"\",\n            showAlert: false,\n            showDelete: false\n        }\n    }\n    \n    asignClient = (record, index) => {\n        this.setState({client: record});\n        let contactability = {}\n        contactability[\"idClient\"] = record.id\n        contactability[\"idCampaign\"] = this.props.campaignId\n        contactability[\"answer\"] = false\n        fetch(Constants.CONTACTABILITY_URL, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(contactability)\n        }).then(response => {\n            return response.json()\n        }).then(data => {\n            this.props.deleteRow(index)\n            this.props.showAlert()\n            this.showSaveAlert()\n        })\n    }\n\n    handleInputChange = e => {\n        console.log(e)\n        let change = {}\n        change = this.state.client\n        change[e.target.name] = e.target.value\n        this.setState({\n            client: change\n        })\n    }\n\n    handleDateChange = e => {\n        console.log(e)\n        console.log(this.state.client)\n        let change = {}\n        change = this.state.client\n        change[\"birthdate\"] = e.toISOString();\n        console.log(change)\n        this.setState({\n            client: change\n        })\n    }\n    \n    onSort = (column, records, sortOrder) => {\n        return orderBy(records, [column], [sortOrder]);\n    }\n    \n    // getClients() {\n    //     fetch(Constants.GET_CLIENTS).then((response) => {\n    //         return response.json();\n    //     }).then(data => {\n    //         this.setState({records: data});\n    //     })\n    // }\n    \n    render() {\n        \n        return (\n            <div>\n                <CustomAlert \n                    show={this.state.showAlert}\n                    onClose={() => {this.setState({showAlert: false})}}\n                    variant={this.state.variant}\n                    messageTitle={this.state.alertTitle}\n                    messageBody={this.state.alertBody} \n                    \n                    dismissible\n                />\n                <ReactDatatable\n                    config={this.config}\n                    records={this.props.records}\n                    columns={this.columns}\n                    onSort={this.onSort}\n\n                />\n            </div>\n        );\n    }\n\n    // componentDidMount() {\n    //     this.getClients()\n    // }\n}\n\nexport default AsignClientsTable;"]},"metadata":{},"sourceType":"module"}