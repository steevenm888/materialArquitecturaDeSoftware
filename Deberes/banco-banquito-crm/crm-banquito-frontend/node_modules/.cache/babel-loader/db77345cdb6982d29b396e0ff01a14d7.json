{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/esteban/Documents/ESPE/Octavo Semestre/Arquitectura de Software/crm-banquito-frontend-project/crm-banquito-frontend-git/crm-banquito-frontend/src/Client/ContactClientsTable.js\";\nimport React from \"react\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { orderBy } from 'lodash';\nimport * as Constants from '../constants';\nimport EditClientModal from \"./EditClientModal\";\nimport CustomAlert from '../CustomComponents/CustomAlert';\nimport DeleteDialog from '../CustomComponents/DeleteDialog';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faCross, faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ContactClientsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.contactClientYes = async (record, index) => {\n      let contactability = {};\n      contactability[\"idClient\"] = record.id;\n      contactability[\"idCampaign\"] = this.props.campaignId;\n      contactability[\"answer\"] = true;\n      this.getContactabilityId(record.id, this.props.campaignId, contactability);\n      console.log(this.state.contactabilityId);\n    };\n\n    this.contactClientNo = async (record, index) => {\n      let contactability = {};\n      contactability[\"idClient\"] = record.id;\n      contactability[\"idCampaign\"] = this.props.campaignId;\n      contactability[\"answer\"] = false;\n      this.getContactabilityId(record.id, this.props.campaignId, contactability);\n    };\n\n    this.onSort = (column, records, sortOrder) => {\n      return orderBy(records, [column], [sortOrder]);\n    };\n\n    this.columns = [{\n      key: \"id\",\n      text: \"Nro\",\n      className: \"id\",\n      sortable: true,\n      show: false\n    }, {\n      key: \"identification\",\n      text: \"Cedula\",\n      sortable: true\n    }, {\n      key: \"name\",\n      text: \"Nombre\",\n      className: \"name\",\n      sortable: true\n    }, {\n      key: \"surname\",\n      text: \"Apellido\",\n      className: \"surname\",\n      sortable: true\n    }, {\n      key: \"genre\",\n      text: \"Genero\",\n      className: \"genre\",\n      sortable: true\n    }, {\n      key: \"birthProvince\",\n      text: \"Provincia\",\n      className: \"bithProvince\",\n      sortable: true\n    }, {\n      key: \"birthCanton\",\n      text: \"Canton\",\n      className: \"bithCanton\",\n      sortable: true\n    }, {\n      key: \"balanceAccount\",\n      text: \"Balance\",\n      className: \"balanceAccount\",\n      sortable: true\n    }, {\n      key: \"balanceLoan\",\n      text: \"Deuda\",\n      className: \"balanceLoan\",\n      sortable: true\n    }, {\n      key: \"answer\",\n      text: \"Respuesta\",\n      className: \"answer\",\n      sortable: true\n    }, {\n      key: \"action\",\n      text: \"Action\",\n      cell: (record, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-sm\",\n            onClick: this.contactClientYes.bind(this, record, index),\n            style: {\n              marginRight: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), \" Si\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm\",\n            onClick: this.contactClientNo.bind(this, record, index),\n            style: {\n              marginRight: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this), \" No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this);\n      }\n    }];\n    this.config = {\n      page_size: 10,\n      length_menu: [10, 20, 50],\n      show_filter: true,\n      show_pagination: true,\n      filename: \"clients\",\n      language: {\n        length_menu: \"Mostrar _MENU_ registros por página\",\n        filter: \"Buscar en registros ...\",\n        info: \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\n        pagination: {\n          first: \"Primero\",\n          previous: \"Previa\",\n          next: \"próximo\",\n          last: \"Última\"\n        }\n      }\n    };\n    this.state = {\n      modalShow: false,\n      client: {},\n      variant: \"\",\n      alertBody: \"\",\n      alertTitle: \"\",\n      showAlert: false,\n      showDelete: false,\n      contactabilityId: 0\n    };\n    this.getContactabilityId = this.getContactabilityId.bind(this);\n  }\n\n  getContactabilityId(idClient, idCampaign, contactability) {\n    fetch(Constants.CONTACTABILITY_URL, {\n      headers: {\n        where: {\n          idCampaign: idCampaign\n        }\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      const targetContactClient = data.filter(contactability => contactability.idClient === idClient);\n      const tempId = targetContactClient[0].id;\n      this.setState({\n        contactabilityId: tempId\n      }, function () {\n        fetch(Constants.CONTACTABILITY_URL + this.state.contactabilityId, {\n          method: \"PUT\",\n          headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n          },\n          body: JSON.stringify(contactability)\n        }).then(response => {\n          return response.text();\n        }).then(data => {\n          this.setState({\n            showAlert: true,\n            variant: \"success\",\n            alertTitle: \"Exito!\",\n            alertBody: \"Se ha actulizado el contacto con el cliente con exito\"\n          });\n          this.props.contactClients();\n        });\n      });\n    });\n  }\n\n  // getClients() {\n  //     fetch(Constants.GET_CLIENTS).then((response) => {\n  //         return response.json();\n  //     }).then(data => {\n  //         this.setState({records: data});\n  //     })\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomAlert, {\n        show: this.state.showAlert,\n        onClose: () => {\n          this.setState({\n            showAlert: false\n          });\n        },\n        variant: this.state.variant,\n        messageTitle: this.state.alertTitle,\n        messageBody: this.state.alertBody,\n        dismissible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(DeleteDialog, {\n          showDelete: this.state.showDelete,\n          hideDelete: () => {\n            this.setState({\n              showDelete: false\n            });\n          },\n          deleteTitle: this.state.deleteTitle,\n          deleteBody: this.state.deleteBody,\n          deleteRegistry: this.deleteRegistry,\n          record: this.state.client\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactDatatable, {\n        config: this.config,\n        records: this.props.records,\n        columns: this.columns,\n        onSort: this.onSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this);\n  } // componentDidMount() {\n  //     this.getClients()\n  // }\n\n\n}\n\nexport default ContactClientsTable;","map":{"version":3,"sources":["/home/esteban/Documents/ESPE/Octavo Semestre/Arquitectura de Software/crm-banquito-frontend-project/crm-banquito-frontend-git/crm-banquito-frontend/src/Client/ContactClientsTable.js"],"names":["React","ReactDatatable","orderBy","Constants","EditClientModal","CustomAlert","DeleteDialog","FontAwesomeIcon","faCheck","faCross","faPlus","faTimes","ContactClientsTable","Component","constructor","props","contactClientYes","record","index","contactability","id","campaignId","getContactabilityId","console","log","state","contactabilityId","contactClientNo","onSort","column","records","sortOrder","columns","key","text","className","sortable","show","cell","bind","marginRight","config","page_size","length_menu","show_filter","show_pagination","filename","language","filter","info","pagination","first","previous","next","last","modalShow","client","variant","alertBody","alertTitle","showAlert","showDelete","idClient","idCampaign","fetch","CONTACTABILITY_URL","headers","where","then","response","json","data","targetContactClient","tempId","setState","method","body","JSON","stringify","contactClients","render","deleteTitle","deleteBody","deleteRegistry"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { orderBy } from 'lodash';\nimport * as Constants from '../constants';\nimport EditClientModal from \"./EditClientModal\";\nimport CustomAlert from '../CustomComponents/CustomAlert';\nimport DeleteDialog from '../CustomComponents/DeleteDialog';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faCross, faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ContactClientsTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.columns = [\n            {\n                key: \"id\",\n                text: \"Nro\",\n                className: \"id\",\n                sortable: true,\n                show: false\n            },\n            {\n                key: \"identification\",\n                text: \"Cedula\",\n                sortable: true\n            },\n            {\n                key: \"name\",\n                text: \"Nombre\",\n                className: \"name\",\n                sortable: true\n            },\n            {\n                key: \"surname\",\n                text: \"Apellido\",\n                className: \"surname\",\n                sortable: true\n            },\n            {\n                key: \"genre\",\n                text: \"Genero\",\n                className: \"genre\",\n                sortable: true\n            },\n            {\n                key: \"birthProvince\",\n                text: \"Provincia\",\n                className: \"bithProvince\",\n                sortable: true\n            },\n            {\n                key: \"birthCanton\",\n                text: \"Canton\",\n                className: \"bithCanton\",\n                sortable: true\n            },\n            {\n                key: \"balanceAccount\",\n                text: \"Balance\",\n                className: \"balanceAccount\",\n                sortable: true\n            },\n            {\n                key: \"balanceLoan\",\n                text: \"Deuda\",\n                className: \"balanceLoan\",\n                sortable: true\n            },\n            {\n                key: \"answer\",\n                text: \"Respuesta\",\n                className: \"answer\",\n                sortable: true\n            },\n            {\n                key: \"action\",\n                text: \"Action\",\n                cell: (record, index) => {\n                    return (\n                        <div>\n                            <button\n                                className=\"btn btn-primary btn-sm\"\n                                onClick={this.contactClientYes.bind(this, record, index)}\n                                style={{marginRight: '5px'}}>\n                                    <FontAwesomeIcon icon={faCheck}/> Si\n                            </button>\n                            <button\n                                className=\"btn btn-danger btn-sm\"\n                                onClick={this.contactClientNo.bind(this, record, index)}\n                                style={{marginRight: '5px'}}>\n                                    <FontAwesomeIcon icon={faTimes}/> No\n                            </button>\n                        </div>\n                    );\n                }\n            }\n        ];\n        this.config = {\n            page_size: 10,\n            length_menu: [10, 20, 50],\n            show_filter: true,\n            show_pagination: true,\n            filename: \"clients\",\n            language: {\n                length_menu: \"Mostrar _MENU_ registros por página\",\n                filter: \"Buscar en registros ...\",\n                info: \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\n                pagination: {\n                    first: \"Primero\",\n                    previous: \"Previa\",\n                    next: \"próximo\",\n                    last: \"Última\"\n                }\n            }\n        }\n        this.state = {\n            modalShow: false,\n            client: {},\n            variant: \"\",\n            alertBody: \"\",\n            alertTitle: \"\",\n            showAlert: false,\n            showDelete: false,\n            contactabilityId: 0\n        }\n        this.getContactabilityId = this.getContactabilityId.bind(this)\n    }\n\n    getContactabilityId(idClient, idCampaign, contactability) {\n        fetch(Constants.CONTACTABILITY_URL, {\n            headers: {\n                where: {\n                    idCampaign: idCampaign\n                }\n            }\n        }).then(response => {\n            return response.json()\n        }).then(data => {\n            const targetContactClient = data.filter(contactability => contactability.idClient === idClient)\n            const tempId = targetContactClient[0].id;\n            this.setState({contactabilityId: tempId}, function() {\n                fetch(Constants.CONTACTABILITY_URL+this.state.contactabilityId, {\n                    method: \"PUT\",\n                    headers: {\n                        'Content-Type': 'application/json;charset=utf-8'\n                    },\n                    body: JSON.stringify(contactability)\n                }).then(response => {\n                    return response.text()\n                }).then(data => {\n                    this.setState({\n                        showAlert: true,\n                        variant: \"success\",\n                        alertTitle: \"Exito!\",\n                        alertBody: \"Se ha actulizado el contacto con el cliente con exito\"\n                    })\n                    this.props.contactClients()\n                })\n            })\n            \n        })\n        \n    }\n    \n    contactClientYes = async (record, index) => {\n        let contactability = {}\n        contactability[\"idClient\"] = record.id\n        contactability[\"idCampaign\"] = this.props.campaignId\n        contactability[\"answer\"] = true\n        this.getContactabilityId(record.id, this.props.campaignId, contactability)\n        console.log(this.state.contactabilityId)\n    }\n\n    contactClientNo = async (record, index) => {\n        let contactability = {}\n        contactability[\"idClient\"] = record.id\n        contactability[\"idCampaign\"] = this.props.campaignId\n        contactability[\"answer\"] = false\n        this.getContactabilityId(record.id, this.props.campaignId, contactability)\n    }\n    \n    onSort = (column, records, sortOrder) => {\n        return orderBy(records, [column], [sortOrder]);\n    }\n    \n    // getClients() {\n    //     fetch(Constants.GET_CLIENTS).then((response) => {\n    //         return response.json();\n    //     }).then(data => {\n    //         this.setState({records: data});\n    //     })\n    // }\n    \n    render() {\n        \n        return (\n            <div>\n                <CustomAlert \n                    show={this.state.showAlert}\n                    onClose={() => {this.setState({showAlert: false})}}\n                    variant={this.state.variant}\n                    messageTitle={this.state.alertTitle}\n                    messageBody={this.state.alertBody} \n                    dismissible\n                />\n                <div className=\"container\">\n                    <DeleteDialog \n                        showDelete={this.state.showDelete}\n                        hideDelete={() => {this.setState({showDelete: false})}}\n                        deleteTitle={this.state.deleteTitle}\n                        deleteBody={this.state.deleteBody}\n                        deleteRegistry={this.deleteRegistry}\n                        record={this.state.client}\n                    />\n                </div>\n                <ReactDatatable\n                    config={this.config}\n                    records={this.props.records}\n                    columns={this.columns}\n                    onSort={this.onSort}\n                />\n            </div>\n        );\n    }\n\n    // componentDidMount() {\n    //     this.getClients()\n    // }\n}\n\nexport default ContactClientsTable;"]},"metadata":{},"sourceType":"module"}