{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/esteban/Documents/ESPE/Octavo Semestre/Arquitectura de Software/crm-banquito-frontend-project/crm-banquito-frontend-git/crm-banquito-frontend/src/Client/ClientTable.js\";\nimport React from \"react\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { orderBy } from 'lodash';\nimport * as Constants from '../constants';\nimport EditClientModal from \"./EditClientModal\";\nimport CustomAlert from '../CustomComponents/CustomAlert';\nimport DeleteDialog from '../CustomComponents/DeleteDialog';\n\nclass ClientTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.editRecord = (record, index) => {\n      this.setState({\n        client: record,\n        modalShow: true\n      });\n      this.setState({\n        variant: \"success\",\n        alertTitle: \"Actualización exitosa!\",\n        alertBody: \"El cliente se ha actualizado exitosamente!\"\n      });\n    };\n\n    this.deleteRecord = (record, index) => {\n      console.log(\"Delete record\", index, record);\n      this.setState({\n        client: record,\n        showDelete: true,\n        deleteTitle: \"Elminicaión de un Producto\",\n        deleteBody: \"¿Está seguro que desea eliminar el cliente '\" + record.name + \" \" + record.surname + \"'?\"\n      });\n    };\n\n    this.deleteRegistry = r => {\n      fetch(Constants.CLIENTS_URL + r.id, {\n        method: 'DELETE'\n      }).then(result => {\n        result.text();\n      }).then(response => {\n        console.log('registry ' + r.id + ' deleted');\n        this.props.getClients();\n      });\n    };\n\n    this.handleInputChange = e => {\n      console.log(e);\n      let change = {};\n      change = this.state.client;\n      change[e.target.name] = e.target.value;\n      this.setState({\n        client: change\n      });\n\n      if ([e.target.name] == \"identification\") {\n        this.validateIdentification(e.target.value);\n      }\n    };\n\n    this.handleDateChange = e => {\n      console.log(e);\n      console.log(this.state.client);\n      let change = {};\n      change = this.state.client;\n      change[\"birthdate\"] = e.toISOString();\n      console.log(change);\n      this.setState({\n        client: change\n      });\n    };\n\n    this.handleProvinceChange = e => {\n      let tempClient = this.state.client;\n      tempClient.birthProvince = e.label;\n      this.setState({\n        province: {\n          id: e.value,\n          name: e.label\n        },\n        client: tempClient\n      }, function () {\n        this.filterCantons(e.value);\n      });\n      console.log(this.state);\n    };\n\n    this.handleCantonChange = e => {\n      let tempClient = this.state.client;\n      tempClient.birthCanton = e.label;\n      this.setState({\n        canton: {\n          id: e.value,\n          name: e.label\n        },\n        client: tempClient\n      });\n      console.log(this.state);\n    };\n\n    this.onSort = (column, records, sortOrder) => {\n      return orderBy(records, [column], [sortOrder]);\n    };\n\n    this.columns = [{\n      key: \"id\",\n      text: \"ID\",\n      className: \"id\",\n      sortable: true\n    }, {\n      key: \"identification\",\n      text: \"Cedula\",\n      sortable: true\n    }, {\n      key: \"name\",\n      text: \"Nombre\",\n      className: \"name\",\n      sortable: true\n    }, {\n      key: \"surname\",\n      text: \"Apellido\",\n      className: \"surname\",\n      sortable: true\n    }, {\n      key: \"birthdate\",\n      text: \"F. Nacimiento\",\n      className: \"birthdate\",\n      sortable: true\n    }, {\n      key: \"genre\",\n      text: \"Genero\",\n      className: \"genre\",\n      sortable: true\n    }, {\n      key: \"birthProvince\",\n      text: \"Provincia\",\n      className: \"bithProvince\",\n      sortable: true\n    }, {\n      key: \"birthCanton\",\n      text: \"Canton\",\n      className: \"bithCanton\",\n      sortable: true\n    }, {\n      key: \"balanceAccount\",\n      text: \"Balance\",\n      className: \"balanceAccount\",\n      sortable: true\n    }, {\n      key: \"balanceLoan\",\n      text: \"Deuda\",\n      className: \"balanceLoan\",\n      sortable: true\n    }, {\n      key: \"action\",\n      text: \"Action\",\n      cell: (record, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-sm\",\n            onClick: this.editRecord.bind(this, record, index),\n            style: {\n              marginRight: '5px'\n            },\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm\",\n            onClick: this.deleteRecord.bind(this, record, index),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this);\n      }\n    }];\n    this.config = {\n      page_size: 10,\n      length_menu: [10, 20, 50],\n      show_filter: true,\n      show_pagination: true,\n      filename: \"clients\",\n      button: {\n        excel: true,\n        print: true,\n        csv: true\n      },\n      language: {\n        length_menu: \"Mostrar _MENU_ registros por página\",\n        filter: \"Buscar en registros ...\",\n        info: \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\n        pagination: {\n          first: \"Primero\",\n          previous: \"Previa\",\n          next: \"próximo\",\n          last: \"Última\"\n        }\n      }\n    };\n    this.state = {\n      modalShow: false,\n      client: {},\n      variant: \"\",\n      alertBody: \"\",\n      alertTitle: \"\",\n      deleteBody: \"\",\n      deleteTitle: \"\",\n      showAlert: false,\n      showDelete: false,\n      province: {\n        id: \"\",\n        name: \"\"\n      },\n      canton: {\n        id: \"\",\n        name: \"\"\n      },\n      provinces: [],\n      cantons: [],\n      valid: true\n    };\n  }\n\n  validateIdentification(id) {\n    console.log(id);\n    var total = 0;\n    var lenght = id.length;\n    var longcheck = lenght - 1;\n\n    if (id !== \"\" && lenght === 10) {\n      for (var i = 0; i < longcheck; i++) {\n        if (i % 2 === 0) {\n          var aux = id.charAt(i) * 2;\n          if (aux > 9) aux -= 9;\n          total += aux;\n        } else {\n          total += parseInt(id.charAt(i));\n        }\n      }\n\n      total = total % 10 ? 10 - total % 10 : 0;\n\n      if (id.charAt(lenght - 1) == total) {\n        this.setState({\n          valid: true\n        });\n      } else {\n        this.setState({\n          valid: false\n        });\n      }\n    } else {\n      this.setState({\n        valid: false\n      });\n    }\n  }\n\n  getProvinces() {\n    fetch(Constants.PROVINCE_URL, {\n      method: \"GET\"\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      const provinces = data.map(d => ({\n        \"value\": d.id,\n        \"label\": d.province\n      }));\n      this.setState({\n        provinces\n      });\n    });\n  }\n\n  getCantons() {\n    fetch(Constants.CANTON_URL, {\n      method: \"GET\"\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      const cantons = data.map(d => ({\n        \"value\": d.id,\n        \"label\": d.canton\n      }));\n      this.setState({\n        cantons\n      });\n    });\n  }\n\n  filterCantons(provinceId) {\n    console.log(provinceId);\n    fetch(Constants.CANTON_URL, {\n      method: \"GET\",\n      headers: {\n        where: {\n          provinceId: provinceId\n        }\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      let filteredDate = data.filter(element => element.provinceId == provinceId);\n      const cantons = filteredDate.map(d => ({\n        \"value\": d.id,\n        \"label\": d.canton\n      }));\n      this.setState({\n        cantons\n      });\n    });\n  }\n\n  // getClients() {\n  //     fetch(Constants.GET_CLIENTS).then((response) => {\n  //         return response.json();\n  //     }).then(data => {\n  //         this.setState({records: data});\n  //     })\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomAlert, {\n        show: this.state.showAlert,\n        onClose: () => {\n          this.setState({\n            showAlert: false\n          });\n        },\n        variant: this.state.variant,\n        messageTitle: this.state.alertTitle,\n        messageBody: this.state.alertBody,\n        dismissible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(DeleteDialog, {\n          showDelete: this.state.showDelete,\n          hideDelete: () => {\n            this.setState({\n              showDelete: false\n            });\n          },\n          deleteTitle: this.state.deleteTitle,\n          deleteBody: this.state.deleteBody,\n          deleteRegistry: this.deleteRegistry,\n          record: this.state.client\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactDatatable, {\n        config: this.config,\n        records: this.props.records,\n        columns: this.columns,\n        onSort: this.onSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditClientModal, {\n        handleInputChange: this.handleInputChange.bind(this),\n        handleDateChange: this.handleDateChange.bind(this),\n        show: this.state.modalShow,\n        client: this.state.client,\n        onHide: () => {\n          this.setState({\n            modalShow: false\n          });\n          this.props.getClients();\n        },\n        getClients: this.props.getClients,\n        onShows: () => {\n          this.setState({\n            showAlert: true\n          });\n        },\n        cantons: this.state.cantons,\n        provinces: this.state.provinces,\n        getProvinces: this.getProvinces,\n        getCantons: this.getCantons,\n        handleCantonChange: this.handleCantonChange,\n        handleProvinceChange: this.handleProvinceChange,\n        filterCantons: this.filterCantons.bind(this),\n        valid: this.state.valid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentWillUnmount() {\n    this.getProvinces();\n    this.getCantons();\n  }\n\n  componentDidMount() {\n    this.getProvinces();\n    this.getCantons();\n  }\n\n}\n\nexport default ClientTable;","map":{"version":3,"sources":["/home/esteban/Documents/ESPE/Octavo Semestre/Arquitectura de Software/crm-banquito-frontend-project/crm-banquito-frontend-git/crm-banquito-frontend/src/Client/ClientTable.js"],"names":["React","ReactDatatable","orderBy","Constants","EditClientModal","CustomAlert","DeleteDialog","ClientTable","Component","constructor","props","editRecord","record","index","setState","client","modalShow","variant","alertTitle","alertBody","deleteRecord","console","log","showDelete","deleteTitle","deleteBody","name","surname","deleteRegistry","r","fetch","CLIENTS_URL","id","method","then","result","text","response","getClients","handleInputChange","e","change","state","target","value","validateIdentification","handleDateChange","toISOString","handleProvinceChange","tempClient","birthProvince","label","province","filterCantons","handleCantonChange","birthCanton","canton","onSort","column","records","sortOrder","columns","key","className","sortable","cell","bind","marginRight","config","page_size","length_menu","show_filter","show_pagination","filename","button","excel","print","csv","language","filter","info","pagination","first","previous","next","last","showAlert","provinces","cantons","valid","total","lenght","length","longcheck","i","aux","charAt","parseInt","getProvinces","PROVINCE_URL","json","data","map","d","getCantons","CANTON_URL","provinceId","headers","where","filteredDate","element","render","componentWillUnmount","componentDidMount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { orderBy } from 'lodash';\nimport * as Constants from '../constants';\nimport EditClientModal from \"./EditClientModal\";\nimport CustomAlert from '../CustomComponents/CustomAlert';\nimport DeleteDialog from '../CustomComponents/DeleteDialog';\n\nclass ClientTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.columns = [\n            {\n                key: \"id\",\n                text: \"ID\",\n                className: \"id\",\n                sortable: true\n            },\n            {\n                key: \"identification\",\n                text: \"Cedula\",\n                sortable: true\n            },\n            {\n                key: \"name\",\n                text: \"Nombre\",\n                className: \"name\",\n                sortable: true\n            },\n            {\n                key: \"surname\",\n                text: \"Apellido\",\n                className: \"surname\",\n                sortable: true\n            },\n            {\n                key: \"birthdate\",\n                text: \"F. Nacimiento\",\n                className: \"birthdate\",\n                sortable: true\n            },\n            {\n                key: \"genre\",\n                text: \"Genero\",\n                className: \"genre\",\n                sortable: true\n            },\n            {\n                key: \"birthProvince\",\n                text: \"Provincia\",\n                className: \"bithProvince\",\n                sortable: true\n            },\n            {\n                key: \"birthCanton\",\n                text: \"Canton\",\n                className: \"bithCanton\",\n                sortable: true\n            },\n            {\n                key: \"balanceAccount\",\n                text: \"Balance\",\n                className: \"balanceAccount\",\n                sortable: true\n            },\n            {\n                key: \"balanceLoan\",\n                text: \"Deuda\",\n                className: \"balanceLoan\",\n                sortable: true\n            },\n            {\n                key: \"action\",\n                text: \"Action\",\n                cell: (record, index) => {\n                    return (\n                        <div>\n                            <button\n                                className=\"btn btn-primary btn-sm\"\n                                onClick={this.editRecord.bind(this, record, index)}\n                                style={{marginRight: '5px'}}>\n                                    Editar\n                            </button>\n                            <button \n                                className=\"btn btn-danger btn-sm\" \n                                onClick={this.deleteRecord.bind(this, record, index)}>\n                                    Eliminar\n                            </button>\n                        </div>\n                    );\n                }\n            }\n        ];\n        this.config = {\n            page_size: 10,\n            length_menu: [10, 20, 50],\n            show_filter: true,\n            show_pagination: true,\n            filename: \"clients\",\n            button: {\n                excel: true,\n                print: true,\n                csv: true\n            },\n            language: {\n                length_menu: \"Mostrar _MENU_ registros por página\",\n                filter: \"Buscar en registros ...\",\n                info: \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\n                pagination: {\n                    first: \"Primero\",\n                    previous: \"Previa\",\n                    next: \"próximo\",\n                    last: \"Última\"\n                }\n            }\n        }\n        this.state = {\n            modalShow: false,\n            client: {},\n            variant: \"\",\n            alertBody: \"\",\n            alertTitle: \"\",\n            deleteBody: \"\",\n            deleteTitle: \"\",\n            showAlert: false,\n            showDelete: false,\n            province: {\n                id: \"\",\n                name: \"\"\n            },\n            canton: {\n                id: \"\",\n                name: \"\"\n            },\n            provinces: [],\n            cantons: [],\n            valid: true\n        }\n    }\n    \n    editRecord = (record, index) => {\n        this.setState({client: record, modalShow: true});\n        this.setState({\n            variant: \"success\",\n            alertTitle: \"Actualización exitosa!\",\n            alertBody: \"El cliente se ha actualizado exitosamente!\"\n        });\n    }\n    \n    deleteRecord = (record, index) => {\n        console.log(\"Delete record\", index, record);\n        this.setState({\n            client: record,\n            showDelete: true,\n            deleteTitle: \"Elminicaión de un Producto\",\n            deleteBody: \"¿Está seguro que desea eliminar el cliente '\"+record.name+\" \"+record.surname+\"'?\"\n        })\n    }\n\n    deleteRegistry = r => {\n        fetch(Constants.CLIENTS_URL+r.id, {\n            method: 'DELETE'\n        }).then(result => {\n            result.text();\n        }).then(response => {\n            console.log('registry '+ r.id +' deleted')\n            this.props.getClients();\n        })\n    }\n\n    validateIdentification(id) {\n        console.log(id)\n        var total = 0;\n        var lenght = id.length;\n        var longcheck = lenght - 1;\n\n        if (id !== \"\" && lenght === 10){\n            for(var i = 0; i < longcheck; i++){\n                if (i%2 === 0) {\n                var aux = id.charAt(i) * 2;\n                if (aux > 9) aux -= 9;\n                total += aux;\n                } else {\n                total += parseInt(id.charAt(i));\n                }\n            }\n\n            total = total % 10 ? 10 - total % 10 : 0;\n\n            if (id.charAt(lenght-1) == total) {\n                this.setState({valid: true})\n            }else{\n                this.setState({valid: false})\n            }\n        }else{\n            this.setState({valid: false})\n        }\n\n\n    }\n\n    handleInputChange = e => {\n        console.log(e)\n        let change = {}\n        change = this.state.client\n        change[e.target.name] = e.target.value\n        this.setState({\n            client: change\n        })\n        if([e.target.name] == \"identification\"){\n            this.validateIdentification(e.target.value)\n        }\n    }\n\n    handleDateChange = e => {\n        console.log(e)\n        console.log(this.state.client)\n        let change = {}\n        change = this.state.client\n        change[\"birthdate\"] = e.toISOString();\n        console.log(change)\n        this.setState({\n            client: change\n        })\n    }\n\n    getProvinces() {\n        fetch(Constants.PROVINCE_URL, {\n            method: \"GET\"\n        }).then(response => {\n            return response.json()\n        }).then(data => {\n            const provinces = data.map(d => ({\n                \"value\" : d.id,\n                \"label\" : d.province\n            }))\n            this.setState({\n                provinces\n            })\n        })\n    }\n\n    getCantons() {\n        fetch(Constants.CANTON_URL, {\n            method: \"GET\",\n        }).then(response => {\n            return response.json()\n        }).then(data => {\n            const cantons = data.map(d => ({\n                \"value\" : d.id,\n                \"label\" : d.canton\n            }))\n            this.setState({\n                cantons\n            })\n        })\n    }\n\n    filterCantons(provinceId) {\n        console.log(provinceId)\n        fetch(Constants.CANTON_URL, {\n            method: \"GET\",\n            headers: {\n                where: {\n                    provinceId: provinceId\n                }\n            }\n        }).then(response => {\n            return response.json()\n        }).then(data => {\n            console.log(data)\n            let filteredDate = data.filter(element => element.provinceId == provinceId);\n            const cantons = filteredDate.map(d => ({\n                \"value\" : d.id,\n                \"label\" : d.canton\n            }))\n            this.setState({\n                cantons\n            })\n        })\n    }\n\n    handleProvinceChange = e => {\n        let tempClient = this.state.client\n        tempClient.birthProvince = e.label\n        this.setState({\n            province: {\n                id: e.value,\n                name: e.label\n            },\n            client: tempClient\n        }, function() {\n            this.filterCantons(e.value)\n        })\n        console.log(this.state)\n    } \n\n    handleCantonChange = e => {\n        let tempClient = this.state.client\n        tempClient.birthCanton = e.label\n        this.setState({\n            canton: {\n                id: e.value,\n                name: e.label\n            },\n            client: tempClient\n        })\n        console.log(this.state)\n    } \n    \n    onSort = (column, records, sortOrder) => {\n        return orderBy(records, [column], [sortOrder]);\n    }\n    \n    // getClients() {\n    //     fetch(Constants.GET_CLIENTS).then((response) => {\n    //         return response.json();\n    //     }).then(data => {\n    //         this.setState({records: data});\n    //     })\n    // }\n    \n    render() {\n        \n        return (\n            <div>\n                <CustomAlert \n                    show={this.state.showAlert}\n                    onClose={() => {this.setState({showAlert: false})}}\n                    variant={this.state.variant}\n                    messageTitle={this.state.alertTitle}\n                    messageBody={this.state.alertBody} \n                    dismissible\n                />\n                <div className=\"container\">\n                    <DeleteDialog \n                        showDelete={this.state.showDelete}\n                        hideDelete={() => {this.setState({showDelete: false})}}\n                        deleteTitle={this.state.deleteTitle}\n                        deleteBody={this.state.deleteBody}\n                        deleteRegistry={this.deleteRegistry}\n                        record={this.state.client}\n                    />\n                </div>\n                <ReactDatatable\n                    config={this.config}\n                    records={this.props.records}\n                    columns={this.columns}\n                    onSort={this.onSort}\n                />\n                <EditClientModal \n                    handleInputChange={this.handleInputChange.bind(this)} \n                    handleDateChange={this.handleDateChange.bind(this)} \n                    show={this.state.modalShow} \n                    client={this.state.client} \n                    onHide={() => {this.setState({modalShow: false}); this.props.getClients()}} \n                    getClients={this.props.getClients}\n                    onShows={() => {this.setState({showAlert: true})}}\n                    cantons={this.state.cantons}\n                    provinces={this.state.provinces}\n                    getProvinces={this.getProvinces}\n                    getCantons={this.getCantons}\n                    handleCantonChange={this.handleCantonChange}\n                    handleProvinceChange={this.handleProvinceChange}\n                    filterCantons={this.filterCantons.bind(this)}\n                    valid={this.state.valid}\n                />\n            </div>\n        );\n    }\n\n    componentWillUnmount() {\n        this.getProvinces();\n        this.getCantons();\n    }\n\n    componentDidMount() {\n        this.getProvinces();\n        this.getCantons();\n    }\n}\n\nexport default ClientTable;"]},"metadata":{},"sourceType":"module"}