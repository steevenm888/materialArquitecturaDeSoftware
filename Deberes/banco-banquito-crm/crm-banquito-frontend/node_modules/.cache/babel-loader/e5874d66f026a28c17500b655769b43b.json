{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/esteban/Documents/ESPE/Octavo Semestre/Arquitectura de Software/crm-banquito-frontend-project/crm-banquito-frontend-git/crm-banquito-frontend/src/ContactabilityRegistration/ContactabilityTable.js\";\nimport React from \"react\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { orderBy } from 'lodash';\nimport * as Constants from '../constants';\nimport CustomAlert from '../CustomComponents/CustomAlert';\nimport DeleteDialog from '../CustomComponents/DeleteDialog';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\nimport ContactClientsModal from \"./ContactClientsModal\";\n\nclass ContactabilityTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.contactClients = (record, index) => {\n      console.log(record);\n\n      if (record) {\n        this.setState({\n          asignModalShow: true,\n          campaignId: record.id\n        });\n      }\n\n      fetch(Constants.CONTACTABILITY_URL, {\n        method: \"GET\",\n        headers: {\n          where: {\n            idCampaign: this.state.currentRecord.id\n          }\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        let asignedClients = [];\n        let cont = 0;\n        data.forEach(element => {\n          asignedClients.push(this.state.clients[element.idClient - 1]);\n          asignedClients[cont].answer = element.answer ? \"Si\" : \"No\";\n          cont++; // this.deleteRow(element.idClient-1)\n        });\n        console.log(asignedClients);\n        this.setState({\n          contactModalShow: true,\n          asignedClients\n        });\n      });\n    };\n\n    this.getClients = () => {\n      fetch(Constants.CLIENTS_URL).then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          clients: data\n        });\n      });\n    };\n\n    this.deleteRow = index => {\n      let r = this.state.clients;\n      r.splice(index, 1);\n      this.setState({\n        clients: r\n      });\n    };\n\n    this.deleteRegistry = r => {\n      fetch(Constants.CAMPAIGN_URL + r.id, {\n        method: 'DELETE'\n      }).then(result => {\n        result.text();\n      }).then(response => {\n        console.log('registry ' + r.id + ' deleted');\n        this.props.getCampaigns();\n      });\n    };\n\n    this.handleInputChange = e => {\n      console.log(e);\n      let change = {};\n      change = this.state.campaign;\n      change[e.target.name] = e.target.value;\n      this.setState({\n        campaign: change\n      });\n    };\n\n    this.onSort = (column, records, sortOrder) => {\n      return orderBy(records, [column], [sortOrder]);\n    };\n\n    this.columns = [{\n      key: \"id\",\n      text: \"ID\",\n      className: \"id\",\n      sortable: true\n    }, {\n      key: \"name\",\n      text: \"Nombre\",\n      sortable: true\n    }, {\n      key: \"description\",\n      text: \"Descripcion\",\n      className: \"description\",\n      sortable: true\n    }, {\n      key: \"action\",\n      text: \"Action\",\n      cell: (record, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success btn-sm\",\n            onClick: this.contactClients.bind(this, record, index),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUsers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this), \" Registrar Contacto con Clientes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this);\n      }\n    }];\n    this.config = {\n      page_size: 10,\n      length_menu: [10, 20, 50],\n      show_filter: true,\n      show_pagination: true,\n      filename: \"campaigns\",\n      button: {\n        excel: true,\n        print: true,\n        csv: true\n      },\n      language: {\n        length_menu: \"Mostrar _MENU_ registros por página\",\n        filter: \"Buscar en registros ...\",\n        info: \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\n        pagination: {\n          first: \"Primero\",\n          previous: \"Previa\",\n          next: \"próximo\",\n          last: \"Última\"\n        }\n      }\n    };\n    this.state = {\n      modalShow: false,\n      contactModalShow: false,\n      campaign: {},\n      variant: \"\",\n      alertBody: \"\",\n      alertTitle: \"\",\n      deleteBody: \"\",\n      deleteTitle: \"\",\n      showAlert: false,\n      showDelete: false,\n      clients: [],\n      asignedClients: [],\n      currentRecord: {},\n      id: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomAlert, {\n        show: this.state.showAlert,\n        onClose: () => {\n          this.setState({\n            showAlert: false\n          });\n        },\n        variant: this.state.variant,\n        messageTitle: this.state.alertTitle,\n        messageBody: this.state.alertBody,\n        dismissible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(DeleteDialog, {\n          showDelete: this.state.showDelete,\n          hideDelete: () => {\n            this.setState({\n              showDelete: false\n            });\n          },\n          deleteTitle: this.state.deleteTitle,\n          deleteBody: this.state.deleteBody,\n          deleteRegistry: this.deleteRegistry,\n          record: this.state.campaign\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactDatatable, {\n        config: this.config,\n        records: this.props.records,\n        columns: this.columns,\n        onSort: this.onSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContactClientsModal, {\n        show: this.state.contactModalShow,\n        records: this.state.asignedClients,\n        onHide: () => this.setState({\n          contactModalShow: false\n        }),\n        campaignId: this.state.campaignId,\n        deleteRow: this.deleteRow.bind(this),\n        contactClients: this.contactClients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    this.getClients();\n  }\n\n}\n\nexport default ContactabilityTable;","map":{"version":3,"sources":["/home/esteban/Documents/ESPE/Octavo Semestre/Arquitectura de Software/crm-banquito-frontend-project/crm-banquito-frontend-git/crm-banquito-frontend/src/ContactabilityRegistration/ContactabilityTable.js"],"names":["React","ReactDatatable","orderBy","Constants","CustomAlert","DeleteDialog","FontAwesomeIcon","faUsers","ContactClientsModal","ContactabilityTable","Component","constructor","props","contactClients","record","index","console","log","setState","asignModalShow","campaignId","id","fetch","CONTACTABILITY_URL","method","headers","where","idCampaign","state","currentRecord","then","response","json","data","asignedClients","cont","forEach","element","push","clients","idClient","answer","contactModalShow","getClients","CLIENTS_URL","deleteRow","r","splice","deleteRegistry","CAMPAIGN_URL","result","text","getCampaigns","handleInputChange","e","change","campaign","target","name","value","onSort","column","records","sortOrder","columns","key","className","sortable","cell","bind","config","page_size","length_menu","show_filter","show_pagination","filename","button","excel","print","csv","language","filter","info","pagination","first","previous","next","last","modalShow","variant","alertBody","alertTitle","deleteBody","deleteTitle","showAlert","showDelete","render","componentDidMount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { orderBy } from 'lodash';\nimport * as Constants from '../constants';\nimport CustomAlert from '../CustomComponents/CustomAlert';\nimport DeleteDialog from '../CustomComponents/DeleteDialog';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\nimport ContactClientsModal from \"./ContactClientsModal\";\n\nclass ContactabilityTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.columns = [\n            {\n                key: \"id\",\n                text: \"ID\",\n                className: \"id\",\n                sortable: true\n            },\n            {\n                key: \"name\",\n                text: \"Nombre\",\n                sortable: true\n            },\n            {\n                key: \"description\",\n                text: \"Descripcion\",\n                className: \"description\",\n                sortable: true\n            },\n            {\n                key: \"action\",\n                text: \"Action\",\n                cell: (record, index) => {\n                    return (\n                        <div>\n                            <button \n                                className=\"btn btn-success btn-sm\" \n                                onClick={this.contactClients.bind(this, record, index)}>\n                                    <FontAwesomeIcon icon={faUsers}/> Registrar Contacto con Clientes\n                            </button>\n                        </div>\n                    );\n                }\n            }\n        ];\n        this.config = {\n            page_size: 10,\n            length_menu: [10, 20, 50],\n            show_filter: true,\n            show_pagination: true,\n            filename: \"campaigns\",\n            button: {\n                excel: true,\n                print: true,\n                csv: true\n            },\n            language: {\n                length_menu: \"Mostrar _MENU_ registros por página\",\n                filter: \"Buscar en registros ...\",\n                info: \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\n                pagination: {\n                    first: \"Primero\",\n                    previous: \"Previa\",\n                    next: \"próximo\",\n                    last: \"Última\"\n                }\n            }\n        }\n        this.state = {\n            modalShow: false,\n            contactModalShow: false,\n            campaign: {},\n            variant: \"\",\n            alertBody: \"\",\n            alertTitle: \"\",\n            deleteBody: \"\",\n            deleteTitle: \"\",\n            showAlert: false,\n            showDelete: false,\n            clients: [],\n            asignedClients: [],\n            currentRecord: {},\n            id: 0\n        }\n    }\n\n    contactClients = (record, index) => {\n        console.log(record)\n        if(record){\n            this.setState({\n                asignModalShow: true,\n                campaignId: record.id\n            })\n        }\n        \n        fetch(Constants.CONTACTABILITY_URL, {\n            method: \"GET\",\n            headers: {\n                where: {\n                    idCampaign: this.state.currentRecord.id\n                }\n            }\n        }).then(response => {\n            return response.json()\n        }).then(data => {\n            console.log(data)\n            let asignedClients = []\n            let cont = 0;\n            data.forEach(element => {\n                asignedClients.push(this.state.clients[element.idClient-1])\n                asignedClients[cont].answer = element.answer ? \"Si\" : \"No\"\n                cont++\n                // this.deleteRow(element.idClient-1)\n            });\n            console.log(asignedClients)\n            this.setState({contactModalShow: true, asignedClients})\n        })\n    }\n\n    getClients = () => {\n        fetch(Constants.CLIENTS_URL).then((response) => {\n            return response.json();\n        }).then(data => {\n            this.setState({clients: data});\n        })\n    }\n\n    deleteRow = (index) => {\n        let r = this.state.clients\n        r.splice(index, 1)\n        this.setState({\n            clients: r\n        })\n    }\n\n    deleteRegistry = r => {\n        fetch(Constants.CAMPAIGN_URL+r.id, {\n            method: 'DELETE'\n        }).then(result => {\n            result.text();\n        }).then(response => {\n            console.log('registry '+ r.id +' deleted')\n            this.props.getCampaigns();\n        })\n    }\n\n    handleInputChange = e => {\n        console.log(e)\n        let change = {}\n        change = this.state.campaign\n        change[e.target.name] = e.target.value\n        this.setState({\n            campaign: change\n        })\n    }\n    \n    onSort = (column, records, sortOrder) => {\n        return orderBy(records, [column], [sortOrder]);\n    }\n    \n    render() {\n        \n        return (\n            <div>\n                <CustomAlert \n                    show={this.state.showAlert}\n                    onClose={() => {this.setState({showAlert: false})}}\n                    variant={this.state.variant}\n                    messageTitle={this.state.alertTitle}\n                    messageBody={this.state.alertBody} \n                    dismissible\n                />\n                <div className=\"container\">\n                    <DeleteDialog \n                        showDelete={this.state.showDelete}\n                        hideDelete={() => {this.setState({showDelete: false})}}\n                        deleteTitle={this.state.deleteTitle}\n                        deleteBody={this.state.deleteBody}\n                        deleteRegistry={this.deleteRegistry}\n                        record={this.state.campaign}\n                    />\n                </div>\n                <ReactDatatable\n                    config={this.config}\n                    records={this.props.records}\n                    columns={this.columns}\n                    onSort={this.onSort}\n                />\n                <ContactClientsModal \n                    show={this.state.contactModalShow}\n                    records={this.state.asignedClients}\n                    onHide={() => this.setState({contactModalShow: false})} \n                    campaignId={this.state.campaignId}\n                    deleteRow={this.deleteRow.bind(this)}\n                    contactClients={this.contactClients}\n                />\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.getClients()\n    }\n}\n\nexport default ContactabilityTable;"]},"metadata":{},"sourceType":"module"}